% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/3-shared-updateCutoffs.R
\name{updateCutoffs}
\alias{updateCutoffs}
\alias{updateCutoffs.propr}
\alias{updateCutoffs.propd}
\title{Update FDR by Permutation}
\usage{
updateCutoffs(object, cutoff_vector = NULL, cutoff_nbins = 1000, ncores = 1)

updateCutoffs.propr(object, cutoff, ncores)

updateCutoffs.propd(object, cutoff)
}
\arguments{
\item{object}{A \code{propr} or \code{propd} object.}

\item{cutoff_vector}{For \code{updateCutoffs}, a numeric vector.
 this argument provides the FDR cutoffs to test. When NULL (default),
the function will calculate the cutoffs based on quantile.}

\item{cutoff_nbins}{An integer. The number of bins for quantile-based
FDR cutoffs.}

\item{ncores}{An integer. The number of parallel cores to use.}
}
\value{
A \code{propr} or \code{propd} object with the FDR slot updated.
}
\description{
This function updates FDR for a set of cutoffs.
}
\details{
This function wraps \code{updateCutoffs.propr} and
 \code{updateCutoffs.propd}.
}
\section{Methods}{

\code{updateCutoffs.propr:}
 Use the \code{propr} object to permute proportionality
 across a number of cutoffs. Since the permutations get saved
 when the object is created, calling \code{updateCutoffs}
 will use the same random seed each time.


\code{updateCutoffs.propd:}
 Use the \code{propd} object to permute theta across a
 number of theta cutoffs. Since the permutations get saved
 when the object is created, calling \code{updateCutoffs}
 will use the same random seed each time.
}

